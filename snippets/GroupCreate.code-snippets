{
    "Create Group": {
        "body": [
            "group = self.tcex.api.tc.v3.group(",
            "    name=group_name,  # e.g., MyAdversary",
            "    type=group_type,  # e.g., Adversary",
            ")",
            "",
            "# create group in ThreatConnect",
            "group.create(params={'owner': owner_name})"
        ],
        "description": "This snippet will create a group in ThreatConnect with the provided name and type.",
        "prefix": [
            "_tcs",
            "_tcs-ti",
            "_tcs-ti-group-create-group"
        ],
        "scope": "python"
    },
    "Create Group with Attribute": {
        "body": [
            "group = self.tcex.api.tc.v3.group(",
            "    name=group_name,  # e.g., MyAdversary",
            "    type=group_type,  # e.g., Adversary",
            ")",
            "",
            "# stage attribute",
            "attribute = self.tcex.api.tc.v3.group_attribute(",
            "    type=attribute_type,  # e.g., Description",
            "    value=attribute_value,  # e.g., An example description attribute.",
            ")",
            "group.stage_attribute(attribute)",
            "",
            "# create group in ThreatConnect",
            "group.create(params={'owner': owner_name})"
        ],
        "description": "This snippet will create a group in ThreatConnect with the provided name, type, and attribute.",
        "prefix": [
            "_tcs",
            "_tcs-ti",
            "_tcs-ti-group-create-group-with-attribute"
        ],
        "scope": "python"
    },
    "Create Group with Security Label": {
        "body": [
            "group = self.tcex.api.tc.v3.group(",
            "    name=group_name,  # e.g., MyAdversary",
            "    type=group_type,  # e.g., Adversary",
            ")",
            "",
            "# stage security label",
            "security_label = self.tcex.api.tc.v3.security_label(name=label_name)  # e.g., TLP:WHITE",
            "group.stage_security_label(security_label)",
            "",
            "# create group in ThreatConnect",
            "group.create(params={'owner': owner_name})"
        ],
        "description": "This snippet will create a group in ThreatConnect with the provided name, type, and security label.",
        "prefix": [
            "_tcs",
            "_tcs-ti",
            "_tcs-ti-group-create-group-with-security-label"
        ],
        "scope": "python"
    },
    "Create Group with Tag": {
        "body": [
            "group = self.tcex.api.tc.v3.group(",
            "    name=group_name,  # e.g., MyAdversary",
            "    type=group_type,  # e.g., Adversary",
            ")",
            "",
            "# stage tag",
            "tag = self.tcex.api.tc.v3.tag(name=tag_name)",
            "group.stage_tag(tag)",
            "",
            "# create group in ThreatConnect",
            "group.create(params={'owner': owner_name})"
        ],
        "description": "This snippet will create a group in ThreatConnect with the provided name, type, and tag.",
        "prefix": [
            "_tcs",
            "_tcs-ti",
            "_tcs-ti-group-create-group-with-tag"
        ],
        "scope": "python"
    }
}